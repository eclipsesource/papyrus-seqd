/*
 * generated by Xtext
 */
grammar InternalLwMessage;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.papyrus.uml.diagram.lightweightsequence.message.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.papyrus.uml.diagram.lightweightsequence.message.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.papyrus.uml.diagram.lightweightsequence.message.xtext.services.LwMessageGrammarAccess;

}

@parser::members {
 
 	private LwMessageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LwMessageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAbstractMessage
entryRuleAbstractMessage 
:
{ before(grammarAccess.getAbstractMessageRule()); }
	 ruleAbstractMessage
{ after(grammarAccess.getAbstractMessageRule()); } 
	 EOF 
;

// Rule AbstractMessage
ruleAbstractMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractMessageAccess().getAlternatives()); }
(rule__AbstractMessage__Alternatives)
{ after(grammarAccess.getAbstractMessageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractRequestMessage
entryRuleAbstractRequestMessage 
:
{ before(grammarAccess.getAbstractRequestMessageRule()); }
	 ruleAbstractRequestMessage
{ after(grammarAccess.getAbstractRequestMessageRule()); } 
	 EOF 
;

// Rule AbstractRequestMessage
ruleAbstractRequestMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractRequestMessageAccess().getAlternatives()); }
(rule__AbstractRequestMessage__Alternatives)
{ after(grammarAccess.getAbstractRequestMessageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequestMessage
entryRuleRequestMessage 
:
{ before(grammarAccess.getRequestMessageRule()); }
	 ruleRequestMessage
{ after(grammarAccess.getRequestMessageRule()); } 
	 EOF 
;

// Rule RequestMessage
ruleRequestMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequestMessageAccess().getGroup()); }
(rule__RequestMessage__Group__0)
{ after(grammarAccess.getRequestMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyMessage
entryRuleAnyMessage 
:
{ before(grammarAccess.getAnyMessageRule()); }
	 ruleAnyMessage
{ after(grammarAccess.getAnyMessageRule()); } 
	 EOF 
;

// Rule AnyMessage
ruleAnyMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyMessageAccess().getGroup()); }
(rule__AnyMessage__Group__0)
{ after(grammarAccess.getAnyMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule MessageRequestArguments
ruleMessageRequestArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getAlternatives()); }
(rule__MessageRequestArguments__Alternatives)
{ after(grammarAccess.getMessageRequestArgumentsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageRequestArgument
entryRuleMessageRequestArgument 
:
{ before(grammarAccess.getMessageRequestArgumentRule()); }
	 ruleMessageRequestArgument
{ after(grammarAccess.getMessageRequestArgumentRule()); } 
	 EOF 
;

// Rule MessageRequestArgument
ruleMessageRequestArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageRequestArgumentAccess().getAlternatives()); }
(rule__MessageRequestArgument__Alternatives)
{ after(grammarAccess.getMessageRequestArgumentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageRequestArgumentWithName
entryRuleMessageRequestArgumentWithName 
:
{ before(grammarAccess.getMessageRequestArgumentWithNameRule()); }
	 ruleMessageRequestArgumentWithName
{ after(grammarAccess.getMessageRequestArgumentWithNameRule()); } 
	 EOF 
;

// Rule MessageRequestArgumentWithName
ruleMessageRequestArgumentWithName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageRequestArgumentWithNameAccess().getMessageRequestNameAndValueParserRuleCall()); }
	ruleMessageRequestNameAndValue
{ after(grammarAccess.getMessageRequestArgumentWithNameAccess().getMessageRequestNameAndValueParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageRequestNameAndValue
entryRuleMessageRequestNameAndValue 
:
{ before(grammarAccess.getMessageRequestNameAndValueRule()); }
	 ruleMessageRequestNameAndValue
{ after(grammarAccess.getMessageRequestNameAndValueRule()); } 
	 EOF 
;

// Rule MessageRequestNameAndValue
ruleMessageRequestNameAndValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getGroup()); }
(rule__MessageRequestNameAndValue__Group__0)
{ after(grammarAccess.getMessageRequestNameAndValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule MessageRequestValue
ruleMessageRequestValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageRequestValueAccess().getValueAssignment()); }
(rule__MessageRequestValue__ValueAssignment)
{ after(grammarAccess.getMessageRequestValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReplyMessage
entryRuleReplyMessage 
:
{ before(grammarAccess.getReplyMessageRule()); }
	 ruleReplyMessage
{ after(grammarAccess.getReplyMessageRule()); } 
	 EOF 
;

// Rule ReplyMessage
ruleReplyMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReplyMessageAccess().getGroup()); }
(rule__ReplyMessage__Group__0)
{ after(grammarAccess.getReplyMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule AssignmentTarget
ruleAssignmentTarget
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentTargetAccess().getGroup()); }
(rule__AssignmentTarget__Group__0)
{ after(grammarAccess.getAssignmentTargetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule MessageReplyOutputs
ruleMessageReplyOutputs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageReplyOutputsAccess().getGroup()); }
(rule__MessageReplyOutputs__Group__0)
{ after(grammarAccess.getMessageReplyOutputsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageReplyOutput
entryRuleMessageReplyOutput 
:
{ before(grammarAccess.getMessageReplyOutputRule()); }
	 ruleMessageReplyOutput
{ after(grammarAccess.getMessageReplyOutputRule()); } 
	 EOF 
;

// Rule MessageReplyOutput
ruleMessageReplyOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getAlternatives()); }
(rule__MessageReplyOutput__Alternatives)
{ after(grammarAccess.getMessageReplyOutputAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputValue
entryRuleOutputValue 
:
{ before(grammarAccess.getOutputValueRule()); }
	 ruleOutputValue
{ after(grammarAccess.getOutputValueRule()); } 
	 EOF 
;

// Rule OutputValue
ruleOutputValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputValueAccess().getGroup()); }
(rule__OutputValue__Group__0)
{ after(grammarAccess.getOutputValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
(rule__BooleanValue__ValueAssignment)
{ after(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerValue
entryRuleIntegerValue 
:
{ before(grammarAccess.getIntegerValueRule()); }
	 ruleIntegerValue
{ after(grammarAccess.getIntegerValueRule()); } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerValueAccess().getValueAssignment()); }
(rule__IntegerValue__ValueAssignment)
{ after(grammarAccess.getIntegerValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnlimitedNaturalValue
entryRuleUnlimitedNaturalValue 
:
{ before(grammarAccess.getUnlimitedNaturalValueRule()); }
	 ruleUnlimitedNaturalValue
{ after(grammarAccess.getUnlimitedNaturalValueRule()); } 
	 EOF 
;

// Rule UnlimitedNaturalValue
ruleUnlimitedNaturalValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnlimitedNaturalValueAccess().getValueAssignment()); }
(rule__UnlimitedNaturalValue__ValueAssignment)
{ after(grammarAccess.getUnlimitedNaturalValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealValue
entryRuleRealValue 
:
{ before(grammarAccess.getRealValueRule()); }
	 ruleRealValue
{ after(grammarAccess.getRealValueRule()); } 
	 EOF 
;

// Rule RealValue
ruleRealValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealValueAccess().getValueAssignment()); }
(rule__RealValue__ValueAssignment)
{ after(grammarAccess.getRealValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullValue
entryRuleNullValue 
:
{ before(grammarAccess.getNullValueRule()); }
	 ruleNullValue
{ after(grammarAccess.getNullValueRule()); } 
	 EOF 
;

// Rule NullValue
ruleNullValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullValueAccess().getGroup()); }
(rule__NullValue__Group__0)
{ after(grammarAccess.getNullValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDouble
entryRuleDouble 
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleAccess().getAlternatives()); }
(rule__Double__Alternatives)
{ after(grammarAccess.getDoubleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnlimitedNatural
entryRuleUnlimitedNatural 
:
{ before(grammarAccess.getUnlimitedNaturalRule()); }
	 ruleUnlimitedNatural
{ after(grammarAccess.getUnlimitedNaturalRule()); } 
	 EOF 
;

// Rule UnlimitedNatural
ruleUnlimitedNatural
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnlimitedNaturalAccess().getAlternatives()); }
(rule__UnlimitedNatural__Alternatives)
{ after(grammarAccess.getUnlimitedNaturalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteger
entryRuleInteger 
:
{ before(grammarAccess.getIntegerRule()); }
	 ruleInteger
{ after(grammarAccess.getIntegerRule()); } 
	 EOF 
;

// Rule Integer
ruleInteger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerAccess().getAlternatives()); }
(rule__Integer__Alternatives)
{ after(grammarAccess.getIntegerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolean
entryRuleBoolean 
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
(rule__Boolean__Alternatives)
{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQName
entryRuleQName 
:
{ before(grammarAccess.getQNameRule()); }
	 ruleQName
{ after(grammarAccess.getQNameRule()); } 
	 EOF 
;

// Rule QName
ruleQName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQNameAccess().getGroup()); }
(rule__QName__Group__0)
{ after(grammarAccess.getQNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AbstractMessage__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractMessageAccess().getAbstractRequestMessageParserRuleCall_0()); }
	ruleAbstractRequestMessage
{ after(grammarAccess.getAbstractMessageAccess().getAbstractRequestMessageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractMessageAccess().getReplyMessageParserRuleCall_1()); }
(	ruleReplyMessage)
{ after(grammarAccess.getAbstractMessageAccess().getReplyMessageParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRequestMessage__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRequestMessageAccess().getAnyMessageParserRuleCall_0()); }
	ruleAnyMessage
{ after(grammarAccess.getAbstractRequestMessageAccess().getAnyMessageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractRequestMessageAccess().getRequestMessageParserRuleCall_1()); }
	ruleRequestMessage
{ after(grammarAccess.getAbstractRequestMessageAccess().getRequestMessageParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequestMessage__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getNameAssignment_0_0()); }
(rule__RequestMessage__NameAssignment_0_0)
{ after(grammarAccess.getRequestMessageAccess().getNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getRequestMessageAccess().getSignalAssignment_0_1()); }
(rule__RequestMessage__SignalAssignment_0_1)
{ after(grammarAccess.getRequestMessageAccess().getSignalAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getRequestMessageAccess().getOperationAssignment_0_2()); }
(rule__RequestMessage__OperationAssignment_0_2)
{ after(grammarAccess.getRequestMessageAccess().getOperationAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getGroup_0()); }
(rule__MessageRequestArguments__Group_0__0)
{ after(grammarAccess.getMessageRequestArgumentsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getGroup_1()); }
(rule__MessageRequestArguments__Group_1__0)
{ after(grammarAccess.getMessageRequestArgumentsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArgument__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentAccess().getGroup_0()); }
(rule__MessageRequestArgument__Group_0__0)
{ after(grammarAccess.getMessageRequestArgumentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMessageRequestArgumentAccess().getMessageRequestValueParserRuleCall_1()); }
	ruleMessageRequestValue
{ after(grammarAccess.getMessageRequestArgumentAccess().getMessageRequestValueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestNameAndValue__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getNameAssignment_0_0()); }
(rule__MessageRequestNameAndValue__NameAssignment_0_0)
{ after(grammarAccess.getMessageRequestNameAndValueAccess().getNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getPropertyAssignment_0_1()); }
(rule__MessageRequestNameAndValue__PropertyAssignment_0_1)
{ after(grammarAccess.getMessageRequestNameAndValueAccess().getPropertyAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getParameterAssignment_0_2()); }
(rule__MessageRequestNameAndValue__ParameterAssignment_0_2)
{ after(grammarAccess.getMessageRequestNameAndValueAccess().getParameterAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getNameAssignment_1_0()); }
(rule__ReplyMessage__NameAssignment_1_0)
{ after(grammarAccess.getReplyMessageAccess().getNameAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getReplyMessageAccess().getOperationAssignment_1_1()); }
(rule__ReplyMessage__OperationAssignment_1_1)
{ after(grammarAccess.getReplyMessageAccess().getOperationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getGroup_0()); }
(rule__MessageReplyOutput__Group_0__0)
{ after(grammarAccess.getMessageReplyOutputAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMessageReplyOutputAccess().getGroup_1()); }
(rule__MessageReplyOutput__Group_1__0)
{ after(grammarAccess.getMessageReplyOutputAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_0()); }
	ruleBooleanValue
{ after(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_1()); }
(	ruleIntegerValue)
{ after(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getUnlimitedNaturalValueParserRuleCall_2()); }
(	ruleUnlimitedNaturalValue)
{ after(grammarAccess.getValueAccess().getUnlimitedNaturalValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getRealValueParserRuleCall_3()); }
(	ruleRealValue)
{ after(grammarAccess.getValueAccess().getRealValueParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueAccess().getNullValueParserRuleCall_4()); }
	ruleNullValue
{ after(grammarAccess.getValueAccess().getNullValueParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_5()); }
	ruleStringValue
{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDoubleAccess().getREALTerminalRuleCall_1()); }
	RULE_REAL
{ after(grammarAccess.getDoubleAccess().getREALTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNatural__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedNaturalAccess().getIntegerParserRuleCall_0()); }
	ruleInteger
{ after(grammarAccess.getUnlimitedNaturalAccess().getIntegerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnlimitedNaturalAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getUnlimitedNaturalAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntegerAccess().getNEG_INTTerminalRuleCall_1()); }
	RULE_NEG_INT
{ after(grammarAccess.getIntegerAccess().getNEG_INTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RequestMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestMessage__Group__0__Impl
	rule__RequestMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getAlternatives_0()); }
(rule__RequestMessage__Alternatives_0)
{ after(grammarAccess.getRequestMessageAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestMessage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getGroup_1()); }
(rule__RequestMessage__Group_1__0)?
{ after(grammarAccess.getRequestMessageAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequestMessage__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestMessage__Group_1__0__Impl
	rule__RequestMessage__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestMessage__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getRequestMessageAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestMessage__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestMessage__Group_1__1__Impl
	rule__RequestMessage__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestMessage__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getMessageRequestArgumentsParserRuleCall_1_1()); }
(	ruleMessageRequestArguments)?
{ after(grammarAccess.getRequestMessageAccess().getMessageRequestArgumentsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestMessage__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestMessage__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestMessage__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getRequestMessageAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnyMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyMessage__Group__0__Impl
	rule__AnyMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyMessageAccess().getAnyMessageAction_0()); }
(

)
{ after(grammarAccess.getAnyMessageAccess().getAnyMessageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyMessage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyMessageAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getAnyMessageAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageRequestArguments__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArguments__Group_0__0__Impl
	rule__MessageRequestArguments__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsAssignment_0_0()); }
(rule__MessageRequestArguments__ArgumentsAssignment_0_0)
{ after(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageRequestArguments__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArguments__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getGroup_0_1()); }
(rule__MessageRequestArguments__Group_0_1__0)*
{ after(grammarAccess.getMessageRequestArgumentsAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageRequestArguments__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArguments__Group_0_1__0__Impl
	rule__MessageRequestArguments__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getMessageRequestArgumentsAccess().getCommaKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageRequestArguments__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArguments__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsAssignment_0_1_1()); }
(rule__MessageRequestArguments__ArgumentsAssignment_0_1_1)
{ after(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageRequestArguments__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArguments__Group_1__0__Impl
	rule__MessageRequestArguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsAssignment_1_0()); }
(rule__MessageRequestArguments__ArgumentsAssignment_1_0)
{ after(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageRequestArguments__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArguments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getGroup_1_1()); }
(rule__MessageRequestArguments__Group_1_1__0)*
{ after(grammarAccess.getMessageRequestArgumentsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageRequestArguments__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArguments__Group_1_1__0__Impl
	rule__MessageRequestArguments__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getMessageRequestArgumentsAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageRequestArguments__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArguments__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsAssignment_1_1_1()); }
(rule__MessageRequestArguments__ArgumentsAssignment_1_1_1)
{ after(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageRequestArgument__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArgument__Group_0__0__Impl
	rule__MessageRequestArgument__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArgument__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentAccess().getWildcardMessageArgumentAction_0_0()); }
(

)
{ after(grammarAccess.getMessageRequestArgumentAccess().getWildcardMessageArgumentAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageRequestArgument__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestArgument__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArgument__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentAccess().getHyphenMinusKeyword_0_1()); }
(
	'-' 
)
{ after(grammarAccess.getMessageRequestArgumentAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageRequestNameAndValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestNameAndValue__Group__0__Impl
	rule__MessageRequestNameAndValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestNameAndValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getAlternatives_0()); }
(rule__MessageRequestNameAndValue__Alternatives_0)
{ after(grammarAccess.getMessageRequestNameAndValueAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageRequestNameAndValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestNameAndValue__Group__1__Impl
	rule__MessageRequestNameAndValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestNameAndValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getMessageRequestNameAndValueAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageRequestNameAndValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageRequestNameAndValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestNameAndValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getMessageRequestValueParserRuleCall_2()); }
	ruleMessageRequestValue
{ after(grammarAccess.getMessageRequestNameAndValueAccess().getMessageRequestValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReplyMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplyMessage__Group__0__Impl
	rule__ReplyMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getAssignmentTargetParserRuleCall_0()); }
(	ruleAssignmentTarget)?
{ after(grammarAccess.getReplyMessageAccess().getAssignmentTargetParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplyMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplyMessage__Group__1__Impl
	rule__ReplyMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getAlternatives_1()); }
(rule__ReplyMessage__Alternatives_1)
{ after(grammarAccess.getReplyMessageAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplyMessage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplyMessage__Group__2__Impl
	rule__ReplyMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getGroup_2()); }
(rule__ReplyMessage__Group_2__0)?
{ after(grammarAccess.getReplyMessageAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplyMessage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplyMessage__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getValueAssignment_3()); }
(rule__ReplyMessage__ValueAssignment_3)?
{ after(grammarAccess.getReplyMessageAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReplyMessage__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplyMessage__Group_2__0__Impl
	rule__ReplyMessage__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getReplyMessageAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplyMessage__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplyMessage__Group_2__1__Impl
	rule__ReplyMessage__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getMessageReplyOutputsParserRuleCall_2_1()); }
(	ruleMessageReplyOutputs)?
{ after(grammarAccess.getReplyMessageAccess().getMessageReplyOutputsParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplyMessage__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplyMessage__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getReplyMessageAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignmentTarget__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentTarget__Group__0__Impl
	rule__AssignmentTarget__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentTarget__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentTargetAccess().getTargetAssignment_0()); }
(rule__AssignmentTarget__TargetAssignment_0)
{ after(grammarAccess.getAssignmentTargetAccess().getTargetAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentTarget__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentTarget__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentTarget__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentTargetAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignmentTargetAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageReplyOutputs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutputs__Group__0__Impl
	rule__MessageReplyOutputs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutputs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputsAccess().getOutputsAssignment_0()); }
(rule__MessageReplyOutputs__OutputsAssignment_0)
{ after(grammarAccess.getMessageReplyOutputsAccess().getOutputsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageReplyOutputs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutputs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutputs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputsAccess().getGroup_1()); }
(rule__MessageReplyOutputs__Group_1__0)*
{ after(grammarAccess.getMessageReplyOutputsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageReplyOutputs__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutputs__Group_1__0__Impl
	rule__MessageReplyOutputs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutputs__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getMessageReplyOutputsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageReplyOutputs__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutputs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutputs__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputsAccess().getOutputsAssignment_1_1()); }
(rule__MessageReplyOutputs__OutputsAssignment_1_1)
{ after(grammarAccess.getMessageReplyOutputsAccess().getOutputsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageReplyOutput__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutput__Group_0__0__Impl
	rule__MessageReplyOutput__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getAssignmentTargetParserRuleCall_0_0()); }
(	ruleAssignmentTarget)
{ after(grammarAccess.getMessageReplyOutputAccess().getAssignmentTargetParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageReplyOutput__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutput__Group_0__1__Impl
	rule__MessageReplyOutput__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getParameterAssignment_0_1()); }
(rule__MessageReplyOutput__ParameterAssignment_0_1)
{ after(grammarAccess.getMessageReplyOutputAccess().getParameterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageReplyOutput__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutput__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getValueAssignment_0_2()); }
(rule__MessageReplyOutput__ValueAssignment_0_2)?
{ after(grammarAccess.getMessageReplyOutputAccess().getValueAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MessageReplyOutput__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutput__Group_1__0__Impl
	rule__MessageReplyOutput__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getParameterAssignment_1_0()); }
(rule__MessageReplyOutput__ParameterAssignment_1_0)
{ after(grammarAccess.getMessageReplyOutputAccess().getParameterAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageReplyOutput__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageReplyOutput__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getValueAssignment_1_1()); }
(rule__MessageReplyOutput__ValueAssignment_1_1)
{ after(grammarAccess.getMessageReplyOutputAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputValue__Group__0__Impl
	rule__OutputValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputValueAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getOutputValueAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputValueAccess().getValueAssignment_1()); }
(rule__OutputValue__ValueAssignment_1)
{ after(grammarAccess.getOutputValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullValue__Group__0__Impl
	rule__NullValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getNullValueAction_0()); }
(

)
{ after(grammarAccess.getNullValueAccess().getNullValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullValueAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QName__Group__0__Impl
	rule__QName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNameAccess().getNameParserRuleCall_0()); }
	ruleName
{ after(grammarAccess.getQNameAccess().getNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNameAccess().getGroup_1()); }
(rule__QName__Group_1__0)*
{ after(grammarAccess.getQNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QName__Group_1__0__Impl
	rule__QName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNameAccess().getColonColonKeyword_1_0()); }

	'::' 

{ after(grammarAccess.getQNameAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNameAccess().getNameParserRuleCall_1_1()); }
	ruleName
{ after(grammarAccess.getQNameAccess().getNameParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__RequestMessage__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getNameNameParserRuleCall_0_0_0()); }
	ruleName{ after(grammarAccess.getRequestMessageAccess().getNameNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequestMessage__SignalAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getSignalSignalCrossReference_0_1_0()); }
(
{ before(grammarAccess.getRequestMessageAccess().getSignalSignalIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRequestMessageAccess().getSignalSignalIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getRequestMessageAccess().getSignalSignalCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequestMessage__OperationAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestMessageAccess().getOperationOperationCrossReference_0_2_0()); }
(
{ before(grammarAccess.getRequestMessageAccess().getOperationOperationIDTerminalRuleCall_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRequestMessageAccess().getOperationOperationIDTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getRequestMessageAccess().getOperationOperationCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__ArgumentsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsMessageRequestArgumentParserRuleCall_0_0_0()); }
	ruleMessageRequestArgument{ after(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsMessageRequestArgumentParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__ArgumentsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsMessageRequestArgumentParserRuleCall_0_1_1_0()); }
	ruleMessageRequestArgument{ after(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsMessageRequestArgumentParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__ArgumentsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsMessageRequestArgumentWithNameParserRuleCall_1_0_0()); }
	ruleMessageRequestArgumentWithName{ after(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsMessageRequestArgumentWithNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestArguments__ArgumentsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsMessageRequestArgumentWithNameParserRuleCall_1_1_1_0()); }
	ruleMessageRequestArgumentWithName{ after(grammarAccess.getMessageRequestArgumentsAccess().getArgumentsMessageRequestArgumentWithNameParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestNameAndValue__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getNameNameParserRuleCall_0_0_0()); }
	ruleName{ after(grammarAccess.getMessageRequestNameAndValueAccess().getNameNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestNameAndValue__PropertyAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getPropertyPropertyCrossReference_0_1_0()); }
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getPropertyPropertyIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMessageRequestNameAndValueAccess().getPropertyPropertyIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getMessageRequestNameAndValueAccess().getPropertyPropertyCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestNameAndValue__ParameterAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getParameterParameterCrossReference_0_2_0()); }
(
{ before(grammarAccess.getMessageRequestNameAndValueAccess().getParameterParameterIDTerminalRuleCall_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMessageRequestNameAndValueAccess().getParameterParameterIDTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getMessageRequestNameAndValueAccess().getParameterParameterCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageRequestValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageRequestValueAccess().getValueValueParserRuleCall_0()); }
	ruleValue{ after(grammarAccess.getMessageRequestValueAccess().getValueValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getNameNameParserRuleCall_1_0_0()); }
	ruleName{ after(grammarAccess.getReplyMessageAccess().getNameNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__OperationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getOperationOperationCrossReference_1_1_0()); }
(
{ before(grammarAccess.getReplyMessageAccess().getOperationOperationIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getReplyMessageAccess().getOperationOperationIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getReplyMessageAccess().getOperationOperationCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReplyMessage__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplyMessageAccess().getValueOutputValueParserRuleCall_3_0()); }
	ruleOutputValue{ after(grammarAccess.getReplyMessageAccess().getValueOutputValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentTarget__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentTargetAccess().getTargetConnectableElementCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignmentTargetAccess().getTargetConnectableElementQNameParserRuleCall_0_0_1()); }
	ruleQName{ after(grammarAccess.getAssignmentTargetAccess().getTargetConnectableElementQNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignmentTargetAccess().getTargetConnectableElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutputs__OutputsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputsAccess().getOutputsMessageReplyOutputParserRuleCall_0_0()); }
	ruleMessageReplyOutput{ after(grammarAccess.getMessageReplyOutputsAccess().getOutputsMessageReplyOutputParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutputs__OutputsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputsAccess().getOutputsMessageReplyOutputParserRuleCall_1_1_0()); }
	ruleMessageReplyOutput{ after(grammarAccess.getMessageReplyOutputsAccess().getOutputsMessageReplyOutputParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__ParameterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getParameterParameterCrossReference_0_1_0()); }
(
{ before(grammarAccess.getMessageReplyOutputAccess().getParameterParameterIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMessageReplyOutputAccess().getParameterParameterIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getMessageReplyOutputAccess().getParameterParameterCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__ValueAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getValueOutputValueParserRuleCall_0_2_0()); }
	ruleOutputValue{ after(grammarAccess.getMessageReplyOutputAccess().getValueOutputValueParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__ParameterAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getParameterParameterCrossReference_1_0_0()); }
(
{ before(grammarAccess.getMessageReplyOutputAccess().getParameterParameterIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMessageReplyOutputAccess().getParameterParameterIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getMessageReplyOutputAccess().getParameterParameterCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageReplyOutput__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageReplyOutputAccess().getValueOutputValueParserRuleCall_1_1_0()); }
	ruleOutputValue{ after(grammarAccess.getMessageReplyOutputAccess().getValueOutputValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputValueAccess().getValueValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getOutputValueAccess().getValueValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getValueBooleanParserRuleCall_0()); }
	ruleBoolean{ after(grammarAccess.getBooleanValueAccess().getValueBooleanParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntegerValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedNaturalValueAccess().getValueUnlimitedNaturalParserRuleCall_0()); }
	ruleUnlimitedNatural{ after(grammarAccess.getUnlimitedNaturalValueAccess().getValueUnlimitedNaturalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealValueAccess().getValueDoubleParserRuleCall_0()); }
	ruleDouble{ after(grammarAccess.getRealValueAccess().getValueDoubleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



fragment RULE_DIGITS : RULE_DIGIT RULE_DIGIT0*;

fragment RULE_DIGIT : '1'..'9';

fragment RULE_DIGIT0 : ('0'|RULE_DIGIT);

fragment RULE_DECIMAL : ((RULE_INT|RULE_NEG_INT)|('-'|'+')? RULE_DIGIT0? '.' RULE_DIGITS);

RULE_INT : '+'? RULE_DIGITS;

RULE_NEG_INT : '-' RULE_DIGITS;

RULE_REAL : RULE_DECIMAL (('e'|'E') ('-'|'+')? RULE_DIGITS)?;

RULE_ID : (('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*|'\'' ( options {greedy=false;} : . )*'\'');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ML_COMMENT : '/*' ~('@') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'|'@'))* ('\r'? '\n')?;

RULE_INTEGER_VALUE : (('0'|'1'..'9' ('_'? '0'..'9')*)|('0b'|'0B') '0'..'1' ('_'? '0'..'1')*|('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F') ('_'? ('0'..'9'|'a'..'f'|'A'..'F'))*|'0' '_'? '0'..'7' ('_'? '0'..'7')*);

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


